function showTabbedWindow(isStarterLayer){

  //? Almost everything this function does, will be cleaned on 'clearConfig' process
  //? But it's necessary
  function setTextDefaultConfig(LFOArray){
    for (var i in LFOArray){
      var obj = LFOArray[i]
      for (var k in config.defaultTextFormat)
        if (!obj.hasOwnProperty(k))
          obj[k] = config.defaultTextFormat[k]
    }
  }

  const propSuffixObj = {
    "edittext":"Box",
    "slider":"Slider",
    "checkbox":"CB",
    "dropdownlist":"DD"
  }

  function setConf(layerFormat, item, DDObj, prop){

    //? These two are obligatory
    if (!item || !layerFormat) return;
    var value;

    if (item.type === "dropdownlist"){
      //? A DropDownObj is necessary here
      if (DDObj && item.selection !== undefined) value = DDObj[item.selection.text];
    }
    else value = item[item.type === "edittext" ? "text" : "value"];

    if (value === undefined) return

    if (!prop) {
      //? Area to remove suffixes of UI Object names
      //? Example: 'visibleCB' -> 'visible' and 'nameBox' -> 'name'
      const name = item.properties && item.properties.name
      if (!name)
        return throwError("Trying to apply setConf() on a UI Object without a name and 'prop'.", undefined, true)

      const propSuffix = propSuffixObj[item.type] || ""
      if (!propSuffix)
        throwError("UI Object '" + name + "' of type '" + item.type + "' don't have a supported suffix registered. Ignoring suffix.", undefined, true)

      if (!name.endsWith(propSuffix))
        return throwError("UI Object '" + name + "' not terminated in '" + propSuffix + "'.", undefined, true)

      prop = name.slice(0, name.length - propSuffix.length)
    }

    layerFormat[prop] = value
  }

  function getUIConfigs(tabs, LFOArray){

    for (var i = 0, len = tabs.length; i < len; i++){
      var TI = tabs[i].items  // Tab Items
      var LF = LFOArray[i] // Layer Format

      setConf(LF, TI.nameBox)
      setConf(LF, TI.duplicateCB)
      setConf(LF, TI.isBackgroundLayerCB)
      setConf(LF, TI.opacitySlider)
      setConf(LF, TI.visibleCB)
      setConf(LF, TI.groupedCB)
      setConf(LF, TI.allLockedCB)
      setConf(LF, TI.transparentPixelsLockedCB)
      setConf(LF, TI.pixelsLockedCB)
      setConf(LF, TI.positionLockedCB)

      setConf(LF, TI.lineIdentifierPrefixBox)
      setConf(LF, TI.lineIdentifierSuffixBox)
      setConf(LF, TI.sizeBox)
      setConf(LF, TI.boxTextCB)
      setConf(LF, TI.hyphenationCB)
      setConf(LF, TI.fontBox)
      setConf(LF, TI.colorBox)

      setConf(LF, TI.antiAliasDD, antiAliasObj)
      setConf(LF, TI.justificationDD, justificationObj)
      setConf(LF, TI.languageDD, languageObj)
      setConf(LF, TI.capitalizationDD, capitalizationObj)
      setConf(LF, TI.blendModeDD, blendModeObj)
    }
  }

  var repeatIndex = 0
  const LFOArray = isStarterLayer ? config.starterLayerFormats : config.customTextFormats

  while (isNotUndef(repeatIndex)) {

    //? (IN TEXT EDITOR) The first one is the default
    if (!isStarterLayer){
      setTextDefaultConfig(LFOArray)
      LFOArray.unshift(config.defaultTextFormat)
    }

    var obj = TabbedWindow(isStarterLayer, LFOArray, repeatIndex)
    repeatIndex = obj.repeatIndex

    //? Get the configuration from each tab
    getUIConfigs(obj.tabs, LFOArray)

    //? (IN TEXT EDITOR) Get the default configuration inserted
    if (!isStarterLayer)
      config.defaultTextFormat = LFOArray.shift()

    clearConfig() //* Asserting Integrity

  }

}




function TabbedWindow(isStarterLayer, LFOArray, repeatIndex){
  // if isStarterLayer is false, enter customTextFormats mode

  /*
  JSON Starter Layers:
  {"items":{"item-0":{"id":0,"type":"Dialog","parentId":false,"style":{"text":"Custom Layer Editor","preferredSize":[0,0],"margins":16,"orientation":"column","spacing":10,"alignChildren":["left","top"],"varName":"win","windowType":"Dialog","creationProps":{"su1PanelCoordinates":false,"maximizeButton":false,"minimizeButton":false,"independent":false,"closeButton":true,"borderless":false,"resizeable":false},"enabled":true}},"item-36":{"id":36,"type":"Group","parentId":0,"style":{"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["left","center"],"alignment":null,"varName":null,"enabled":true}},"item-38":{"id":38,"type":"Button","parentId":36,"style":{"text":"Close","justify":"center","preferredSize":[0,0],"alignment":null,"varName":"closeBtn","helpTip":null,"enabled":true}},"item-39":{"id":39,"type":"VerticalTabbedPanel","parentId":0,"style":{"enabled":true,"varName":"tabPanel","preferredSize":[0,0],"tabNavWidth":0,"margins":0,"alignment":null,"selection":40}},"item-40":{"id":40,"type":"Tab","parentId":39,"style":{"enabled":true,"varName":"nameBox","text":"Layer 1","orientation":"column","spacing":10,"alignChildren":["fill","top"]}},"item-41":{"id":41,"type":"Tab","parentId":39,"style":{"enabled":true,"varName":null,"text":"Layer 2","orientation":"column","spacing":10,"alignChildren":["fill","top"]}},"item-42":{"id":42,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":6,"alignChildren":["right","center"],"alignment":null}},"item-43":{"id":43,"type":"StaticText","parentId":42,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Layer Name","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-44":{"id":44,"type":"EditText","parentId":42,"style":{"enabled":true,"varName":null,"creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"Raw","justify":"left","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-48":{"id":48,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"visibleCB","text":"Visible","preferredSize":[0,0],"alignment":null,"helpTip":"Visibility of the layer","checked":true}},"item-49":{"id":49,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"isBackgroundLayerCB","text":"Is Background Layer","preferredSize":[0,0],"alignment":null,"helpTip":"Check this to make the layer, the background layer"}},"item-51":{"id":51,"type":"Panel","parentId":67,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"Locking","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-52":{"id":52,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"allLockedCB","text":"All Locked","preferredSize":[0,0],"alignment":"center","helpTip":null}},"item-53":{"id":53,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"transparentPixelsLockedCB","text":"Transparent Pixels Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-54":{"id":54,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"pixelsLockedCB","text":"Pixels Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-55":{"id":55,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"positionLockedCB","text":"Position Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-56":{"id":56,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"groupedCB","text":"Clipping Mask","preferredSize":[0,0],"alignment":null,"helpTip":""}},"item-58":{"id":58,"type":"Slider","parentId":59,"style":{"enabled":true,"varName":"opacitySlider","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-59":{"id":59,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":"fill"}},"item-60":{"id":60,"type":"StaticText","parentId":59,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Opacity","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-61":{"id":61,"type":"Panel","parentId":67,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["left","top"],"alignment":null}},"item-62":{"id":62,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"duplicateCB","text":"Duplicate","preferredSize":[0,0],"alignment":null,"helpTip":"This will duplicate the layer below/before"}},"item-63":{"id":63,"type":"StaticText","parentId":41,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"TESTE LAYER 2","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-64":{"id":64,"type":"Button","parentId":67,"style":{"enabled":true,"varName":"deleteBtn","text":"Delete","justify":"center","preferredSize":[0,0],"alignment":"fill","helpTip":"Delete this Layer"}},"item-65":{"id":65,"type":"Checkbox","parentId":36,"style":{"enabled":true,"varName":"disableThisCB","text":"Disable All","preferredSize":[0,0],"alignment":null,"helpTip":"Disable layer creation","checked":true}},"item-66":{"id":66,"type":"Button","parentId":36,"style":{"text":"Add Layer","justify":"center","preferredSize":[0,0],"alignment":null,"varName":"addTabBtn","helpTip":"Create a new layer below all others","enabled":true}},"item-67":{"id":67,"type":"Panel","parentId":40,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":"fill"}}},"order":[0,36,65,66,38,39,40,67,42,43,44,59,60,58,61,48,56,49,62,51,52,53,54,55,64,41,63],"settings":{"importJSON":true,"indentSize":false,"cepExport":false,"includeCSSJS":true,"functionWrapper":false,"compactCode":false,"showDialog":true,"afterEffectsDockable":false,"itemReferenceList":"var"},"activeId":58}
  */

  // WIN
  // ===
  var win = new Window("dialog");
    win.text = isStarterLayer ? "Custom Layer Editor" : "Custom Text Formats Editor";
    win.orientation = "column";
    win.alignChildren = ["left","top"];
    win.spacing = 10;
    win.margins = 16;

  // GROUP1
  // ======
  var group1 = win.add("group", undefined, {name: "group1"});
    group1.orientation = "row";
    group1.alignChildren = ["left","center"];
    group1.spacing = 10;
    group1.margins = 0;

  var disableThisCB = group1.add("checkbox", undefined, undefined, {name: "disableThisCB"});
    disableThisCB.helpTip = isStarterLayer ? "Disable layer creation" : "Disable custom text formats and use only the default";
    disableThisCB.text = isStarterLayer ? "Disable All" : "Disable Custom Text Formats";
    disableThisCB.value = true;

    if (!isStarterLayer){
      var group2 = group1.add("group", undefined, {name: "group2"});
          group2.orientation = "row";
          group2.alignChildren = ["left","center"];
          group2.spacing = 0;
          group2.margins = 0;

      var statictext1 = group2.add("statictext", undefined, undefined, {name: "statictext1"});
          statictext1.helpTip = "Any line starting with this, will always be formatted as your default format";
          statictext1.text = "Ignore Custom With:";

      var ignoreCustomWithBox = group2.add('edittext {properties: {name: "ignoreCustomWithBox"}}');
          ignoreCustomWithBox.helpTip = "Leave blank to disable feature";

          ignoreCustomWithBox.preferredSize.width = identifiersWidth * 0.8;

          ignoreCustomWithBox.text = config.ignoreCustomWith
          ignoreCustomWithBox.onChanging = function () {
            config.ignoreCustomWith = ignoreCustomWithBox.text
          }
    }

  var addTabBtn = group1.add("button", undefined, undefined, {name: "addTabBtn"});
    addTabBtn.helpTip = "Create a new layer below all others";
    addTabBtn.text = isStarterLayer ? "Add Layer" : "Add Format";

  var closeBtn = group1.add("button", undefined, undefined, {name: "closeBtn"});
    closeBtn.text = "Close";



  // TABPANEL
  // ========
  var tabPanel = win.add("group", undefined, undefined, {name: "tabPanel"});
    tabPanel.alignChildren = ["left","fill"];
  var tabPanel_nav = tabPanel.add ("listbox", undefined, [], { columnWidths: [60]});
  var tabPanel_innerwrap = tabPanel.add("group")
    tabPanel_innerwrap.alignment = ["fill","fill"];
    tabPanel_innerwrap.orientation = ["stack"];


  // * -------------------------------------------------------------------

  //? --------- Constants and Variables ---------

  const tabPanel_tabs = [];

  //? --------- Functions ---------



  function deleteTab(index){

    if (typeof index === "string"){
      //? It is the tab name
      var l = tabPanel_innerwrap.children.length
      for (var i = 0; i < l; i++)
        if (tabPanel_innerwrap.children[index] === tabPanel_innerwrap.children[i]){
          index = i
          break;
        }
    }

    LFOArray.splice(index,1)
    tabPanel_tabs.splice(index,1)
    tabPanel_nav.remove(index)
    tabPanel_innerwrap.remove(index)
    tabPanel_nav.selection = index - 1;
  }

  function addTab(index){

    if (index === undefined || index >= LFOArray.length){
      index = LFOArray.length
      LFOArray.push({})

      if (win.visible){
        repeatIndex = index
        win.close()
        return
      }
    }

    const tabName = isStarterLayer ? (index ? "Layer " + (index) : "Raw Layer") : (index ? "Format " + (index) : "Default")

    tabPanel_tabs.push(
        (isStarterLayer ? createStarterLayerTab : createCustomFormatTab)
        (index, LFOArray[index], tabPanel_innerwrap, tabName)
        )

    tabPanel_nav.add ("item", tabName)
    tabPanel_nav.selection = index
  }

  function showTab_tabPanel() {
    if ( tabPanel_nav.selection !== null ) {
    for (var i = tabPanel_tabs.length-1; i >= 0; i--)
      tabPanel_tabs[i].visible = false;
    tabPanel_tabs[tabPanel_nav.selection.index].visible = true;
    }
  }

  //? --------- Set Properties ---------

  win.cancelElement = closeBtn
  win.defaultElement = addTabBtn

  tabPanel_nav.onChange = showTab_tabPanel;
  tabPanel_innerwrap.deleteTab = deleteTab
  addTabBtn.onClick = addTab

  tabPanel.alignChildren = ["left","fill"];
  tabPanel_nav.minimumSize = [60, 300]

  disableThisCB.value = isStarterLayer ? config.disableStarterLayer : config.disableCustomTextFormats
  disableThisCB.onClick = function () {
    if (isStarterLayer)
      config.disableStarterLayer = disableThisCB.value
    else
      config.disableCustomTextFormats = disableThisCB.value

    const enabled = !disableThisCB.value
    addTabBtn.enabled = enabled
    if (isStarterLayer)
      tabPanel.enabled = enabled
    else {
      tabPanel_nav.enabled = enabled
      group2.enabled = enabled //ignoreCustomWithBox
      if (!enabled){
        tabPanel_nav.selection = 0
        showTab_tabPanel()
      }
    }
  }

  //? --------- Execution ---------


  //? Add all Layers
  for (var i = 0; i < LFOArray.length; i++)
    addTab(i)

  //? Show the right tab
  tabPanel_nav.selection = repeatIndex
  showTab_tabPanel()
  disableThisCB.onClick()

  win.onShow = function () {
    //? This is necessary because onShow() is called after
    //? the automatic layout is calculated
    for (var i in tabPanel_tabs)
      if (isNotUndef(tabPanel_tabs[i].items.warning))
        tabPanel_tabs[i].items.warning()
  }

  //? While repeatIndex is defined, the window will be opened again
  repeatIndex = undefined
  win.show()

  return {
    repeatIndex: repeatIndex,
    tabs: tabPanel_tabs
  }

}

















function createCustomFormatTab(index, layerFormat, tabPanel_innerwrap, tabName){

   /*
    Code for Import https://scriptui.joonas.me — (Triple click to select):
    {"items":{"item-0":{"id":0,"type":"Dialog","parentId":false,"style":{"text":"Custom Layer Editor","preferredSize":[0,0],"margins":16,"orientation":"column","spacing":10,"alignChildren":["left","top"],"varName":"tabPanel_innerwrap","windowType":"Dialog","creationProps":{"su1PanelCoordinates":false,"maximizeButton":false,"minimizeButton":false,"independent":false,"closeButton":true,"borderless":false,"resizeable":false},"enabled":true}},"item-42":{"id":42,"type":"Group","parentId":96,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":6,"alignChildren":["right","center"],"alignment":null}},"item-43":{"id":43,"type":"StaticText","parentId":42,"style":{"enabled":true,"varName":"","creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Prefix","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-44":{"id":44,"type":"EditText","parentId":42,"style":{"enabled":true,"varName":"lineIdentifierPrefixBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"","justify":"left","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-48":{"id":48,"type":"Checkbox","parentId":102,"style":{"enabled":true,"varName":"visibleCB","text":"Visible","preferredSize":[0,0],"alignment":null,"helpTip":"Visibility of the layer","checked":true}},"item-51":{"id":51,"type":"Panel","parentId":96,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"Font","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-58":{"id":58,"type":"Slider","parentId":59,"style":{"enabled":true,"varName":"opacitySlider","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-59":{"id":59,"type":"Group","parentId":61,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":null}},"item-60":{"id":60,"type":"StaticText","parentId":59,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Opacity","justify":"left","preferredSize":[0,0],"alignment":"center","helpTip":null}},"item-61":{"id":61,"type":"Panel","parentId":97,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-64":{"id":64,"type":"Button","parentId":107,"style":{"enabled":true,"varName":"deleteBtn","text":"Delete","justify":"center","preferredSize":[200,0],"alignment":"fill","helpTip":"Delete this format"}},"item-67":{"id":67,"type":"Panel","parentId":105,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":8,"alignChildren":["fill","top"],"alignment":"fill"}},"item-68":{"id":68,"type":"Group","parentId":83,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-69":{"id":69,"type":"StaticText","parentId":68,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Blend Mode","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-70":{"id":70,"type":"DropDownList","parentId":68,"style":{"enabled":true,"varName":"blendModeDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-71":{"id":71,"type":"Group","parentId":96,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":6,"alignChildren":["right","center"],"alignment":null}},"item-72":{"id":72,"type":"StaticText","parentId":71,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Suffix","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-73":{"id":73,"type":"EditText","parentId":71,"style":{"enabled":true,"varName":"lineIdentifierSuffixBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"","justify":"left","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-74":{"id":74,"type":"EditText","parentId":51,"style":{"enabled":true,"varName":"fontBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"","justify":"left","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-75":{"id":75,"type":"DropDownList","parentId":51,"style":{"enabled":true,"varName":"fontDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-76":{"id":76,"type":"Group","parentId":96,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":6,"alignChildren":["right","center"],"alignment":null}},"item-77":{"id":77,"type":"StaticText","parentId":76,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Size (px)","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-78":{"id":78,"type":"EditText","parentId":76,"style":{"enabled":true,"varName":"sizeBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"","justify":"left","preferredSize":[50,0],"alignment":"fill","helpTip":"Leave 0 to not change text size"}},"item-80":{"id":80,"type":"EditText","parentId":103,"style":{"enabled":true,"varName":"colorBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"","justify":"left","preferredSize":[50,0],"alignment":null,"helpTip":"Leave blank to not change text color"}},"item-81":{"id":81,"type":"Button","parentId":103,"style":{"enabled":true,"varName":"pickColorBtn","text":"Pick Color","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":"Open window to select a color","selection":0}},"item-82":{"id":82,"type":"Checkbox","parentId":101,"style":{"enabled":true,"varName":"boxTextCB","text":"Box Text","preferredSize":[0,0],"alignment":null,"helpTip":"If marked, a \"Text Box\" will be used instead of a \"Point Text\""}},"item-83":{"id":83,"type":"Panel","parentId":97,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["right","center"],"alignment":null}},"item-84":{"id":84,"type":"Group","parentId":83,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-85":{"id":85,"type":"StaticText","parentId":84,"style":{"enabled":true,"varName":"","creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Justification","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-86":{"id":86,"type":"DropDownList","parentId":84,"style":{"enabled":true,"varName":"justificationDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-87":{"id":87,"type":"Group","parentId":83,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-88":{"id":88,"type":"StaticText","parentId":87,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Language","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-89":{"id":89,"type":"DropDownList","parentId":87,"style":{"enabled":true,"varName":"languageDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-90":{"id":90,"type":"Group","parentId":83,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-91":{"id":91,"type":"StaticText","parentId":90,"style":{"enabled":true,"varName":"","creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Capitalization","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-92":{"id":92,"type":"DropDownList","parentId":90,"style":{"enabled":true,"varName":"capitalizationDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-93":{"id":93,"type":"Group","parentId":83,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-94":{"id":94,"type":"StaticText","parentId":93,"style":{"enabled":true,"varName":"","creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Anti Aliasing","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-95":{"id":95,"type":"DropDownList","parentId":93,"style":{"enabled":true,"varName":"antiAliasDD","text":"DropDownList","listItems":"Item","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}},"item-96":{"id":96,"type":"Group","parentId":106,"style":{"enabled":true,"varName":"column1","preferredSize":[0,0],"margins":0,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-97":{"id":97,"type":"Group","parentId":106,"style":{"enabled":true,"varName":"column2","preferredSize":[0,0],"margins":0,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-99":{"id":99,"type":"StaticText","parentId":100,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":true,"text":"WARNING:\nBoth Line Identifiers\nare Blank!\nThis page is deactivated...","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-100":{"id":100,"type":"Group","parentId":96,"style":{"enabled":true,"varName":"warningGroup","preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","top"],"alignment":null}},"item-101":{"id":101,"type":"Group","parentId":96,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":null}},"item-102":{"id":102,"type":"Group","parentId":61,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":null}},"item-103":{"id":103,"type":"Group","parentId":61,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":null}},"item-104":{"id":104,"type":"StaticText","parentId":103,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Color","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-105":{"id":105,"type":"Group","parentId":0,"style":{"enabled":true,"varName":"tab","preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","fill"],"alignment":null}},"item-106":{"id":106,"type":"Group","parentId":67,"style":{"enabled":true,"varName":"columnWrapper","preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["left","bottom"],"alignment":null}},"item-107":{"id":107,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-108":{"id":108,"type":"Checkbox","parentId":102,"style":{"enabled":true,"varName":"hyphenationCB","text":"Hyphenation","preferredSize":[0,0],"alignment":null,"helpTip":"Wrap long words to the line below using a hyphen. Affected by language"}}},"order":[0,105,67,106,96,100,99,42,43,44,71,72,73,101,82,76,77,78,51,74,75,97,83,93,94,95,84,85,86,87,88,89,90,91,92,68,69,70,61,103,104,80,81,59,60,58,102,48,108,107,64],"settings":{"importJSON":true,"indentSize":false,"cepExport":false,"includeCSSJS":true,"functionWrapper":false,"compactCode":false,"showDialog":true,"afterEffectsDockable":false,"itemReferenceList":"var"},"activeId":108}
    */

// TAB
// ===

const tab = tabPanel_innerwrap.add("group", undefined, {name: tabName});
tab.text = tabName

tab.orientation = "column";
tab.alignChildren = ["fill","top"];
tab.spacing = 10;
tab.margins = 0;


// PANEL1
// ======
var panel1 = tab.add("panel", undefined, undefined, {name: "panel1"});
    panel1.orientation = "column";
    panel1.alignChildren = ["fill","top"];
    panel1.spacing = 8;
    panel1.margins = 10;
    panel1.alignment = ["center","fill"];

// COLUMNWRAPPER
// =============
var columnWrapper = panel1.add("group", undefined, {name: "columnWrapper"});
    columnWrapper.orientation = "row";
    columnWrapper.alignChildren = ["left","bottom"];
    columnWrapper.spacing = 10;
    columnWrapper.margins = 0;

// COLUMN1
// =======
var column1 = columnWrapper.add("group", undefined, {name: "column1"});
    column1.orientation = "column";
    column1.alignChildren = ["fill","top"];
    column1.spacing = 10;
    column1.margins = 0;

// WARNINGGROUP
// ============
var warningGroup = column1.add("group", undefined, {name: "warningGroup"});
    warningGroup.orientation = "row";
    warningGroup.alignChildren = ["center","top"];
    warningGroup.spacing = 10;
    warningGroup.margins = 0;

var statictext1 = warningGroup.add("group");
    statictext1.orientation = "column";
    statictext1.alignChildren = ["center","center"];
    statictext1.spacing = 0;

    statictext1.add("statictext", undefined, "WARNING:", {name: "statictext1"});
    statictext1.add("statictext", undefined, "Both Line Identifiers", {name: "statictext1"});
    statictext1.add("statictext", undefined, "are Blank!", {name: "statictext1"});
    statictext1.add("statictext", undefined, "This page is deactivated...", {name: "statictext1"});

// GROUP1
// ======
var group1 = column1.add("group", undefined, {name: "group1"});
    group1.orientation = "row";
    group1.alignChildren = ["right","center"];
    group1.spacing = 6;
    group1.margins = 0;

var statictext2 = group1.add("statictext", undefined, undefined, {name: "statictext2"});
    statictext2.text = "Prefix";

var lineIdentifierPrefixBox = group1.add('edittext {properties: {name: "lineIdentifierPrefixBox"}}');
    lineIdentifierPrefixBox.preferredSize.width = 100;
    lineIdentifierPrefixBox.alignment = ["right","fill"];

// GROUP2
// ======
var group2 = column1.add("group", undefined, {name: "group2"});
    group2.orientation = "row";
    group2.alignChildren = ["right","center"];
    group2.spacing = 6;
    group2.margins = 0;

var statictext3 = group2.add("statictext", undefined, undefined, {name: "statictext3"});
    statictext3.text = "Suffix";

var lineIdentifierSuffixBox = group2.add('edittext {properties: {name: "lineIdentifierSuffixBox"}}');
    lineIdentifierSuffixBox.preferredSize.width = 100;
    lineIdentifierSuffixBox.alignment = ["right","fill"];

// GROUP3
// ======
var group3 = column1.add("group", undefined, {name: "group3"});
    group3.orientation = "row";
    group3.alignChildren = ["right","center"];
    group3.spacing = 10;
    group3.margins = 0;

var boxTextCB = group3.add("checkbox", undefined, undefined, {name: "boxTextCB"});
    boxTextCB.helpTip = "If marked, a \u0022Text Box\u0022 will be used instead of a \u0022Point Text\u0022";
    boxTextCB.text = "Box Text";

// GROUP4
// ======
var group4 = column1.add("group", undefined, {name: "group4"});
    group4.orientation = "row";
    group4.alignChildren = ["right","center"];
    group4.spacing = 6;
    group4.margins = 0;

var statictext4 = group4.add("statictext", undefined, undefined, {name: "statictext4"});
    statictext4.text = "Size (px)";

var sizeBox = group4.add('edittext {properties: {name: "sizeBox"}}');
    sizeBox.helpTip = "Leave 0 to not change text size";
    sizeBox.preferredSize.width = 50;
    sizeBox.alignment = ["right","fill"];

// PANEL2
// ======
var panel2 = column1.add("panel", undefined, undefined, {name: "panel2"});
    panel2.text = "Font";
    panel2.orientation = "column";
    panel2.alignChildren = ["fill","top"];
    panel2.spacing = 10;
    panel2.margins = 10;

var fontBox = panel2.add('edittext {properties: {name: "fontBox"}}');
    fontBox.preferredSize.width = 100;
    fontBox.alignment = ["fill","top"];

var fontDD = panel2.add("dropdownlist", undefined, undefined, {name: "fontDD", items: fontDD_array});
    fontDD.selection = 0;
    fontDD.alignment = ["fill","top"];

// COLUMN2
// =======
var column2 = columnWrapper.add("group", undefined, {name: "column2"});
    column2.orientation = "column";
    column2.alignChildren = ["fill","top"];
    column2.spacing = 10;
    column2.margins = 0;

// PANEL3
// ======
var panel3 = column2.add("panel", undefined, undefined, {name: "panel3"});
    panel3.orientation = "column";
    panel3.alignChildren = ["right","center"];
    panel3.spacing = 10;
    panel3.margins = 10;

// GROUP5
// ======
var group5 = panel3.add("group", undefined, {name: "group5"});
    group5.orientation = "row";
    group5.alignChildren = ["center","center"];
    group5.spacing = 10;
    group5.margins = 0;

var statictext5 = group5.add("statictext", undefined, undefined, {name: "statictext5"});
    statictext5.text = "Anti Aliasing";
    statictext5.justify = "center";

var antiAliasDD = group5.add("dropdownlist", undefined, undefined, {name: "antiAliasDD", items: antiAliasDD_array});
    antiAliasDD.selection = 0;
    antiAliasDD.alignment = ["center","fill"];

// GROUP6
// ======
var group6 = panel3.add("group", undefined, {name: "group6"});
    group6.orientation = "row";
    group6.alignChildren = ["center","center"];
    group6.spacing = 10;
    group6.margins = 0;

var statictext6 = group6.add("statictext", undefined, undefined, {name: "statictext6"});
    statictext6.text = "Justification";
    statictext6.justify = "center";

var justificationDD = group6.add("dropdownlist", undefined, undefined, {name: "justificationDD", items: justificationDD_array});
    justificationDD.selection = 0;
    justificationDD.alignment = ["center","fill"];

// GROUP7
// ======
var group7 = panel3.add("group", undefined, {name: "group7"});
    group7.orientation = "row";
    group7.alignChildren = ["center","center"];
    group7.spacing = 10;
    group7.margins = 0;

var statictext7 = group7.add("statictext", undefined, undefined, {name: "statictext7"});
    statictext7.text = "Language";
    statictext7.justify = "center";

var languageDD = group7.add("dropdownlist", undefined, undefined, {name: "languageDD", items: languageDD_array});
    languageDD.selection = 0;
    languageDD.alignment = ["center","fill"];

// GROUP8
// ======
var group8 = panel3.add("group", undefined, {name: "group8"});
    group8.orientation = "row";
    group8.alignChildren = ["center","center"];
    group8.spacing = 10;
    group8.margins = 0;

var statictext8 = group8.add("statictext", undefined, undefined, {name: "statictext8"});
    statictext8.text = "Capitalization";
    statictext8.justify = "center";

var capitalizationDD = group8.add("dropdownlist", undefined, undefined, {name: "capitalizationDD", items: capitalizationDD_array});
    capitalizationDD.selection = 0;
    capitalizationDD.alignment = ["center","fill"];

// GROUP9
// ======
var group9 = panel3.add("group", undefined, {name: "group9"});
    group9.orientation = "row";
    group9.alignChildren = ["center","center"];
    group9.spacing = 10;
    group9.margins = 0;

var statictext9 = group9.add("statictext", undefined, undefined, {name: "statictext9"});
    statictext9.text = "Blend Mode";
    statictext9.justify = "center";

var blendModeDD = group9.add("dropdownlist", undefined, undefined, {name: "blendModeDD", items: blendModeDD_array});
    blendModeDD.selection = 0;
    blendModeDD.alignment = ["center","fill"];

// PANEL4
// ======
var panel4 = column2.add("panel", undefined, undefined, {name: "panel4"});
    panel4.orientation = "column";
    panel4.alignChildren = ["fill","top"];
    panel4.spacing = 10;
    panel4.margins = 10;

// GROUP10
// =======
var group10 = panel4.add("group", undefined, {name: "group10"});
    group10.orientation = "row";
    group10.alignChildren = ["right","center"];
    group10.spacing = 10;
    group10.margins = 0;

var statictext10 = group10.add("statictext", undefined, undefined, {name: "statictext10"});
    statictext10.text = "Color";
    statictext10.justify = "center";

var colorBox = group10.add('edittext {properties: {name: "colorBox"}}');
    colorBox.helpTip = "Leave blank to not change text color";
    colorBox.preferredSize.width = 50;

var pickColorBtn = group10.add("button", undefined, undefined, {name: "pickColorBtn"});
    pickColorBtn.helpTip = "Open window to select a color";
    pickColorBtn.text = "Pick Color";

// GROUP11
// =======
var group11 = panel4.add("group", undefined, {name: "group11"});
    group11.orientation = "row";
    group11.alignChildren = ["right","center"];
    group11.spacing = 10;
    group11.margins = 0;

var statictext11 = group11.add("statictext", undefined, undefined, {name: "statictext11"});
    statictext11.text = "Opacity";
    statictext11.alignment = ["right","center"];

var opacitySlider = group11.add("slider", undefined, undefined, undefined, undefined, {name: "opacitySlider"});
    opacitySlider.minvalue = 0;
    opacitySlider.maxvalue = 100;
    opacitySlider.value = 50;
    opacitySlider.preferredSize.width = 100;
    opacitySlider.alignment = ["right","fill"];

// GROUP12
// =======
var group12 = panel4.add("group", undefined, {name: "group12"});
    group12.orientation = "row";
    group12.alignChildren = ["right","center"];
    group12.spacing = 10;
    group12.margins = 0;

var visibleCB = group12.add("checkbox", undefined, undefined, {name: "visibleCB"});
    visibleCB.helpTip = "Visibility of the layer";
    visibleCB.text = "Visible";
    visibleCB.value = true;

var hyphenationCB = group12.add("checkbox", undefined, undefined, {name: "hyphenationCB"});
    hyphenationCB.text = "Hyphenation";
    hyphenationCB.helpTip = "Wrap long words to the line below using a hyphen. Affected by language";

// GROUP13
// =======
var group13 = panel1.add("group", undefined, {name: "group13"});
    group13.orientation = "row";
    group13.alignChildren = ["center","center"];
    group13.spacing = 10;
    group13.margins = 0;

var deleteBtn = group13.add("button", undefined, undefined, {name: "deleteBtn"});
    deleteBtn.helpTip = "Delete this format";
    deleteBtn.text = "Delete";
    deleteBtn.preferredSize.width = 200;
    deleteBtn.alignment = ["center","fill"];

 //* -------------------------------------------------------------

  //? --------- Variables ---------

  var changedByBox = true

  //? --------- Functions ---------

  function setDD(optionObj, DDObj, prop){
    var DDKey = getKeyOf(optionObj, isNotUndef(layerFormat[prop]) ? layerFormat[prop].toUpperCase() : defaultConfig.LayerFormatObject[prop])
    DDObj.selection = DDObj.find( DDKey ) | 0
  }

  function updateFontListDD(fontString) {
    var fontDDFont = getFont(fontString)
    fontDD.selection = isNotUndef(fontDDFont) ? fontDD.find(fontDDFont.name) | 0 : 0
  }

  function warning(show){
    if (show === undefined)
      show = !index ? false : !lineIdentifierPrefixBox.text.length && !lineIdentifierSuffixBox.text.length

    if (warningGroup.enabled == show) return
    warningGroup.enabled = show

    if (show){
      statictext1.children[0].text = "WARNING:"
      statictext1.children[1].text = "Both Line Identifiers"
      statictext1.children[2].text = "are Blank!"
      statictext1.children[3].text = "This page is deactivated..."
    }
    else
      for (var i = 0; i < 4; i++)
        statictext1.children[i].text = ""
  }

  //? --------- Set Properties ---------

  tab.alignment = ["fill","fill"];
  tab.visible = false;
  columnWrapper.alignChildren = ["fill","bottom"];

  fontDD.maximumSize = dropDownSizes
  antiAliasDD.maximumSize = dropDownSizes
  justificationDD.maximumSize = dropDownSizes
  languageDD.maximumSize = dropDownSizes
  capitalizationDD.maximumSize = dropDownSizes
  blendModeDD.maximumSize = dropDownSizes

  lineIdentifierPrefixBox.preferredSize.width = identifiersWidth;
  lineIdentifierSuffixBox.preferredSize.width = identifiersWidth;

  opacitySlider.preferredSize.width = dropDownSizes[0];
  colorBox.preferredSize.width = identifiersWidth
  sizeBox.preferredSize.width = identifiersWidth * 0.8

  if (!index){
    //? Index is 0
    group1.enabled = false
    group2.enabled = false
    deleteBtn.enabled = false
  }

  //? --------- Set Values ---------

  lineIdentifierPrefixBox.text = isNotUndef(layerFormat.lineIdentifierPrefix) ?  layerFormat.lineIdentifierPrefix : defaultConfig.LayerFormatObject.lineIdentifierPrefix
  lineIdentifierSuffixBox.text = isNotUndef(layerFormat.lineIdentifierSuffix) ?  layerFormat.lineIdentifierSuffix : defaultConfig.LayerFormatObject.lineIdentifierSuffix
  sizeBox.text = isNotUndef(layerFormat.size) ?  layerFormat.size : defaultConfig.LayerFormatObject.size
  boxTextCB.value = isNotUndef(layerFormat.boxText) ?  layerFormat.boxText : defaultConfig.LayerFormatObject.boxText
  fontBox.text = isNotUndef(layerFormat.font) ?  layerFormat.font : defaultConfig.LayerFormatObject.font
  colorBox.text = isNotUndef(layerFormat.color) ?  layerFormat.color : defaultConfig.LayerFormatObject.color
  visibleCB.value = isNotUndef(layerFormat.visible) ? layerFormat.visible : defaultConfig.LayerFormatObject.visible
  hyphenationCB.value = isNotUndef(layerFormat.hyphenation) ? layerFormat.hyphenation : defaultConfig.LayerFormatObject.hyphenation
  opacitySlider.value = isNotUndef(layerFormat.opacity) ? layerFormat.opacity : defaultConfig.LayerFormatObject.opacity

  setDD(antiAliasObj, antiAliasDD, "antiAlias")
  setDD(justificationObj, justificationDD, "justification")
  setDD(languageObj, languageDD, "language")
  setDD(capitalizationObj, capitalizationDD, "capitalization")
  setDD(blendModeObj, blendModeDD, "blendMode")

  updateFontListDD(isNotUndef(layerFormat.font) ? layerFormat.font :  defaultConfig.LayerFormatObject.font)

  //? --------- Set Callbacks ---------

  lineIdentifierPrefixBox.onChanging = warning
  lineIdentifierSuffixBox.onChanging = warning

  opacitySlider.onChanging = function () {
    opacitySlider.helpTip = opacitySlider.value
  }
  opacitySlider.onChange = opacitySlider.onChanging //? Fallback

  sizeBox.onChanging = function () {
    ensureFontSizeUI(sizeBox)
  }
  sizeBox.onChange = sizeBox.onChanging

  colorBox.onChanging = function () {
    const s = colorBox.text
    if (s){
      s = s.replace(/[^0-9A-F]/i,"").toUpperCase()
      s = "#" + s.replace("#","")
      s = s.slice(0,"#000000".length)
      colorBox.text = s
    }
  }
  colorBox.onChange = function () {
    if (colorBox.active) return
    const s = colorBox.text
    if (s && !isHexColor(s)) colorBox.text = "#000000"
  }

  pickColorBtn.onClick = function (){
    colorBox.text = getAnotherColor(colorBox.text)
    colorBox.onChange()
  }

  fontBox.onChanging = function () {
    changedByBox = true
    updateFontListDD(fontBox.text)
  }

  fontDD.onChange = function () {
    if (changedByBox){
      changedByBox = false
      return
    }
    changedByBox = false
    fontBox.text = fontDD.selection.index ? fontDD.selection.text : defaultConfig.LayerFormatObject.font
  }

  deleteBtn.onClick = function () {
    tabPanel_innerwrap.deleteTab(tabName)
  }


  opacitySlider.onChanging()
  sizeBox.onChanging()
  colorBox.onChanging()
  colorBox.onChange()
  fontBox.onChanging()

  tab.items = {
    tab: tab, // dialog
    warning: warning,
    lineIdentifierPrefixBox: lineIdentifierPrefixBox, // edittext
    lineIdentifierSuffixBox: lineIdentifierSuffixBox, // edittext
    sizeBox: sizeBox, // edittext
    boxTextCB: boxTextCB, // checkbox
    fontBox: fontBox, // edittext
    fontDD: fontDD, // dropdownlist
    deleteBtn: deleteBtn, // button
    colorBox: colorBox, // edittext
    pickColorBtn: pickColorBtn, // button
    antiAliasDD: antiAliasDD, // dropdownlist
    justificationDD: justificationDD, // dropdownlist
    languageDD: languageDD, // dropdownlist
    capitalizationDD: capitalizationDD, // dropdownlist
    blendModeDD: blendModeDD, // dropdownlist
    visibleCB: visibleCB, // checkbox
    hyphenationCB: hyphenationCB, // checkbox
    opacitySlider: opacitySlider // slider
  };

  return tab
}








function createStarterLayerTab(index, layerFormat, tabPanel_innerwrap, tabName){

  /*
  Just Tab Part:
  {"items":{"item-0":{"id":0,"type":"Dialog","parentId":false,"style":{"text":"Custom Layer Editor","preferredSize":[0,0],"margins":16,"orientation":"column","spacing":10,"alignChildren":["left","top"],"varName":"tab1","windowType":"Dialog","creationProps":{"su1PanelCoordinates":false,"maximizeButton":false,"minimizeButton":false,"independent":false,"closeButton":true,"borderless":false,"resizeable":false},"enabled":true}},"item-42":{"id":42,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":6,"alignChildren":["right","center"],"alignment":null}},"item-43":{"id":43,"type":"StaticText","parentId":42,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Layer Name","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-44":{"id":44,"type":"EditText","parentId":42,"style":{"enabled":true,"varName":"nameBox","creationProps":{"noecho":false,"readonly":false,"multiline":false,"scrollable":false,"borderless":false,"enterKeySignalsOnChange":false},"softWrap":false,"text":"Raw","justify":"left","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-48":{"id":48,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"visibleCB","text":"Visible","preferredSize":[0,0],"alignment":null,"helpTip":"Visibility of the layer","checked":true}},"item-49":{"id":49,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"isBackgroundLayerCB","text":"Is Background Layer","preferredSize":[0,0],"alignment":null,"helpTip":"Check this to make the layer, the background layer"}},"item-51":{"id":51,"type":"Panel","parentId":67,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"Locking","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":null}},"item-52":{"id":52,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"allLockedCB","text":"All Locked","preferredSize":[0,0],"alignment":"center","helpTip":null}},"item-53":{"id":53,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"transparentPixelsLockedCB","text":"Transparent Pixels Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-54":{"id":54,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"pixelsLockedCB","text":"Pixels Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-55":{"id":55,"type":"Checkbox","parentId":51,"style":{"enabled":true,"varName":"positionLockedCB","text":"Position Locked","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-56":{"id":56,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"groupedCB","text":"Clipping Mask","preferredSize":[0,0],"alignment":null,"helpTip":""}},"item-58":{"id":58,"type":"Slider","parentId":59,"style":{"enabled":true,"varName":"opacitySlider","preferredSize":[100,0],"alignment":"fill","helpTip":null}},"item-59":{"id":59,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"row","spacing":10,"alignChildren":["right","center"],"alignment":"fill"}},"item-60":{"id":60,"type":"StaticText","parentId":59,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Opacity","justify":"left","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-61":{"id":61,"type":"Panel","parentId":67,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["left","top"],"alignment":null}},"item-62":{"id":62,"type":"Checkbox","parentId":61,"style":{"enabled":true,"varName":"duplicateCB","text":"Duplicate","preferredSize":[0,0],"alignment":null,"helpTip":"This will duplicate the layer below/before"}},"item-64":{"id":64,"type":"Button","parentId":67,"style":{"enabled":true,"varName":"deleteBtn","text":"Delete","justify":"center","preferredSize":[0,0],"alignment":"fill","helpTip":"Delete this Layer"}},"item-67":{"id":67,"type":"Panel","parentId":0,"style":{"enabled":true,"varName":null,"creationProps":{"borderStyle":"etched","su1PanelCoordinates":false},"text":"","preferredSize":[0,0],"margins":10,"orientation":"column","spacing":10,"alignChildren":["fill","top"],"alignment":"fill"}},"item-68":{"id":68,"type":"Group","parentId":67,"style":{"enabled":true,"varName":null,"preferredSize":[0,0],"margins":0,"orientation":"column","spacing":10,"alignChildren":["center","center"],"alignment":null}},"item-69":{"id":69,"type":"StaticText","parentId":68,"style":{"enabled":true,"varName":null,"creationProps":{"truncate":"none","multiline":false,"scrolling":false},"softWrap":false,"text":"Blend Mode","justify":"center","preferredSize":[0,0],"alignment":null,"helpTip":null}},"item-70":{"id":70,"type":"DropDownList","parentId":68,"style":{"enabled":true,"varName":"blendModeDD","text":"DropDownList","listItems":"Item 1, -, Item 2","preferredSize":[0,0],"alignment":"fill","selection":0,"helpTip":null}}},"order":[0,67,42,43,44,59,60,58,68,69,70,61,48,56,49,62,51,52,53,54,55,64],"settings":{"importJSON":true,"indentSize":false,"cepExport":false,"includeCSSJS":true,"functionWrapper":false,"compactCode":false,"showDialog":true,"afterEffectsDockable":false,"itemReferenceList":"var"},"activeId":70}
  */


  const tab = tabPanel_innerwrap.add("group", undefined, {name: tabName});
  tab.text = tabName

  tab.orientation = "column";
  tab.alignChildren = ["fill","top"];
  tab.spacing = 10;
  tab.margins = 0;



  // PANEL1
  // ======
  var panel1 = tab.add("panel", undefined, undefined, {name: "panel1"});
    panel1.orientation = "column";
    panel1.alignChildren = ["fill","top"];
    panel1.spacing = 10;
    panel1.margins = 10;
    panel1.alignment = ["fill","top"];

  // GROUP1
  // ======
  var group1 = panel1.add("group", undefined, {name: "group1"});
    group1.orientation = "row";
    group1.alignChildren = ["right","center"];
    group1.spacing = 6;
    group1.margins = 0;

  var nameBox = group1.add("statictext", undefined, undefined, {name: "nameBox"});
    nameBox.text = "Layer Name";

  var nameBox = group1.add('edittext {properties: {name: "nameBox"}}');
    nameBox.text = "Raw";
    nameBox.preferredSize.width = 100;
    nameBox.alignment = ["right","fill"];

  // GROUP2
  // ======
  var group2 = panel1.add("group", undefined, {name: "group2"});
    group2.orientation = "row";
    group2.alignChildren = ["right","center"];
    group2.spacing = 10;
    group2.margins = 0;
    group2.alignment = ["fill","top"];

  var statictext2 = group2.add("statictext", undefined, undefined, {name: "statictext2"});
    statictext2.text = "Opacity";

  var opacitySlider = group2.add("slider", undefined, undefined, undefined, undefined, {name: "opacitySlider"});
    opacitySlider.minvalue = 0;
    opacitySlider.maxvalue = 100;
    opacitySlider.value = 100;
    opacitySlider.preferredSize.width = 100;
    opacitySlider.alignment = ["right","fill"];

  // GROUP3
  // ======
  var group3 = panel1.add("group", undefined, {name: "group3"});
    group3.orientation = "row";
    group3.text = "Blend Mode"
    group3.alignChildren = ["right","center"];
    group3.spacing = 10;
    group3.margins = 0;

  var statictext3 = group3.add("statictext", undefined, undefined, {name: "statictext3"});
    statictext3.text = "Blend Mode";
    statictext3.justify = "center";

  var blendModeDD = group3.add("dropdownlist", undefined, undefined, {name: "blendModeDD", items: blendModeDD_array});
    blendModeDD.alignment = ["right","fill"];

  // PANEL2
  // ======
  var panel2 = panel1.add("panel", undefined, undefined, {name: "panel2"});
    panel2.orientation = "column";
    panel2.alignChildren = ["left","top"];
    panel2.spacing = 10;
    panel2.margins = 10;

  var visibleCB = panel2.add("checkbox", undefined, undefined, {name: "visibleCB"});
    visibleCB.helpTip = "Visibility of the layer";
    visibleCB.text = "Visible";
    visibleCB.value = true;

  var groupedCB = panel2.add("checkbox", undefined, undefined, {name: "groupedCB"});
    groupedCB.text = "Clipping Mask";

  // PANEL3
  // ======
  var panel3 = panel1.add("panel", undefined, undefined, {name: "panel3"});
    panel3.text = "Locking";
    panel3.orientation = "column";
    panel3.alignChildren = ["fill","top"];
    panel3.spacing = 10;
    panel3.margins = 10;

  var allLockedCB = panel3.add("checkbox", undefined, undefined, {name: "allLockedCB"});
    allLockedCB.text = "All Locked";
    allLockedCB.alignment = ["center","top"];

  var transparentPixelsLockedCB = panel3.add("checkbox", undefined, undefined, {name: "transparentPixelsLockedCB"});
    transparentPixelsLockedCB.text = "Transparent Pixels Locked";

  var pixelsLockedCB = panel3.add("checkbox", undefined, undefined, {name: "pixelsLockedCB"});
    pixelsLockedCB.text = "Pixels Locked";

  var positionLockedCB = panel3.add("checkbox", undefined, undefined, {name: "positionLockedCB"});
    positionLockedCB.text = "Position Locked";


  //* -------------------------------------------------------------

  //? --------- Fallbacks ---------

  var duplicateCB = { value:false }
  var isBackgroundLayerCB = { value:false }

  //? --------- Conditional Object Creation ---------

  if (index){
    //? Index is more than 1

    duplicateCB = panel2.add("checkbox", undefined, undefined, {name: "duplicateCB"});
    duplicateCB.helpTip = "This will duplicate the layer below/before";
    duplicateCB.text = "Duplicate";

    var deleteBtn = panel1.add("button", undefined, undefined, {name: "deleteBtn"});
    deleteBtn.helpTip = "Delete this Layer";
    deleteBtn.text = "Delete";
    deleteBtn.alignment = ["fill","top"];

  } else {
    //? Index is 0
    tab.text = "Original Layer"
    isBackgroundLayerCB = panel2.add("checkbox", undefined, undefined, {name: "isBackgroundLayerCB"});
    isBackgroundLayerCB.helpTip = "Check this to make the layer, the background layer";
    isBackgroundLayerCB.text = "Is Background Layer";

  }



  //? --------- Functions ---------

  function changeOne(element, enabled, value){
    element.enabled = enabled

    if (isNotUndef(value)){
      if (element.type == "checkbox"){
        element.value = value
        if (element.onClick) element.onClick()
      } else if (element.type == "slider" && !value){
        element.value = 100
        if (element.onChanging) element.onChanging()
      } else if (element.type == "dropdownlist" && !value){
        element.selection = 0
        if (element.onChange) element.onChange()
      }
    }
  }

  function changeAll(array, enabled, value){
    for (var i = 0, l = array.length; i < l; i++)
    changeOne(array[i], enabled, value)
  }

  //? --------- Set Properties ---------

  tab.alignment = ["fill","fill"];
  tab.visible = false;

  blendModeDD.maximumSize = dropDownSizes
  groupedCB.enabled = !index

  //? --------- Set Values ---------

  nameBox.text = isNotUndef(layerFormat.name) ? layerFormat.name : defaultConfig.LayerFormatObject.name
  opacitySlider.value = isNotUndef(layerFormat.opacity) ? layerFormat.opacity : defaultConfig.LayerFormatObject.opacity
  visibleCB.value = isNotUndef(layerFormat.visible) ? layerFormat.visible : defaultConfig.LayerFormatObject.visible
  groupedCB.value = isNotUndef(layerFormat.grouped) ? layerFormat.grouped : defaultConfig.LayerFormatObject.grouped
  allLockedCB.value = isNotUndef(layerFormat.allLocked) ? layerFormat.allLocked : defaultConfig.LayerFormatObject.allLocked
  transparentPixelsLockedCB.value = isNotUndef(layerFormat.transparentPixelsLocked) ? layerFormat.transparentPixelsLocked : defaultConfig.LayerFormatObject.transparentPixelsLocked
  pixelsLockedCB.value = isNotUndef(layerFormat.pixelsLocked) ? layerFormat.pixelsLocked : defaultConfig.LayerFormatObject.pixelsLocked
  positionLockedCB.value = isNotUndef(layerFormat.positionLocked) ? layerFormat.positionLocked : defaultConfig.LayerFormatObject.positionLocked

  var blendModeDDKey = getKeyOf(blendModeObj, isNotUndef(layerFormat.blendMode) ? layerFormat.blendMode.toUpperCase() : defaultConfig.LayerFormatObject.blendMode)
  blendModeDD.selection = blendModeDD.find( blendModeDDKey ) | 0

  if (index)
    duplicateCB.value = isNotUndef(layerFormat.duplicate) ? layerFormat.duplicate : defaultConfig.LayerFormatObject.duplicate
  else
    isBackgroundLayerCB.value = isNotUndef(layerFormat.isBackgroundLayer) ? layerFormat.isBackgroundLayer : defaultConfig.LayerFormatObject.isBackgroundLayer

  //? --------- Set Callbacks ---------

  opacitySlider.onChanging = function () {
    opacitySlider.helpTip = opacitySlider.value
  }
  opacitySlider.onChange = opacitySlider.onChanging //? Fallback

  allLockedCB.onClick = function () {
    if (allLockedCB.value)
      changeAll([transparentPixelsLockedCB, pixelsLockedCB, positionLockedCB], false, false)
    else
      changeAll([transparentPixelsLockedCB, pixelsLockedCB, positionLockedCB], true)
  }


  nameBox.onChange = function () {
    if (!nameBox.text.length)
      nameBox.text = defaultConfig.LayerFormatObject.name
  }

  if (index){
    //? Index is more than 1

    deleteBtn.onClick = function () {
      tabPanel_innerwrap.deleteTab(tabName)
    }
  } else {
    //? Index is 0

    isBackgroundLayerCB.onClick = function () {
      if (isBackgroundLayerCB.value){
        changeOne(visibleCB, false, true)
        changeAll([nameBox,blendModeDD,opacitySlider,allLockedCB,transparentPixelsLockedCB, pixelsLockedCB, positionLockedCB], false, false)
      } else {
        changeOne(visibleCB, true)
        changeAll([nameBox,blendModeDD,opacitySlider,allLockedCB,transparentPixelsLockedCB, pixelsLockedCB, positionLockedCB], true)
      }
    }
  }



  if (!index && isBackgroundLayerCB.value) isBackgroundLayerCB.onClick()
  if (allLockedCB.value) allLockedCB.onClick()
  opacitySlider.onChanging()

  tab.items = {
    tab: tab, // dialog
    nameBox: nameBox, // textBox
    opacitySlider: opacitySlider, // slider
    visibleCB: visibleCB, // checkbox
    groupedCB: groupedCB, // checkbox
    isBackgroundLayerCB: isBackgroundLayerCB, // checkbox
    duplicateCB: duplicateCB, // checkbox
    allLockedCB: allLockedCB, // checkbox
    transparentPixelsLockedCB: transparentPixelsLockedCB, // checkbox
    pixelsLockedCB: pixelsLockedCB, // checkbox
    positionLockedCB: positionLockedCB, // checkbox
    blendModeDD: blendModeDD // dropdown
  };

  return tab
}





